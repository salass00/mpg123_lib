#ifndef INLINE4_MPG123_H
#define INLINE4_MPG123_H

/*
** This file was auto generated by idltool 53.23.
**
** It provides compatibility to OS3 style library
** calls by substituting functions.
**
** Do not edit manually.
*/ 

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef EXEC_EXEC_H
#include <exec/exec.h>
#endif
#ifndef EXEC_INTERFACES_H
#include <exec/interfaces.h>
#endif

#ifndef LIBRARIES_MPG123_H
#include <libraries/mpg123.h>
#endif
#include <interfaces/mpg123.h>

/* Inline macros for Interface "main" */
#define mpg123_new(decoder, error) IMpg123->mpg123_new((decoder), (error))
#define mpg123_delete(mh) IMpg123->mpg123_delete((mh))
#define mpg123_param(mh, type, value, fvalue) IMpg123->mpg123_param((mh), (type), (value), (fvalue))
#define mpg123_getparam(mh, type, val, fval) IMpg123->mpg123_getparam((mh), (type), (val), (fval))
#define mpg123_feature(key) IMpg123->mpg123_feature((key))
#define mpg123_plain_strerror(errcode) IMpg123->mpg123_plain_strerror((errcode))
#define mpg123_strerror(mh) IMpg123->mpg123_strerror((mh))
#define mpg123_errcode(mh) IMpg123->mpg123_errcode((mh))
#define mpg123_decoders() IMpg123->mpg123_decoders()
#define mpg123_supported_decoders() IMpg123->mpg123_supported_decoders()
#define mpg123_decoder(mh, decoder_name) IMpg123->mpg123_decoder((mh), (decoder_name))
#define mpg123_current_decoder(mh) IMpg123->mpg123_current_decoder((mh))
#define mpg123_rates(list, number) IMpg123->mpg123_rates((list), (number))
#define mpg123_encodings(list, number) IMpg123->mpg123_encodings((list), (number))
#define mpg123_encsize(encoding) IMpg123->mpg123_encsize((encoding))
#define mpg123_format_none(mh) IMpg123->mpg123_format_none((mh))
#define mpg123_format_all(mh) IMpg123->mpg123_format_all((mh))
#define mpg123_format(mh, rate, channels, encodings) IMpg123->mpg123_format((mh), (rate), (channels), (encodings))
#define mpg123_format_support(mh, rate, encoding) IMpg123->mpg123_format_support((mh), (rate), (encoding))
#define mpg123_getformat(mh, rate, channels, encoding) IMpg123->mpg123_getformat((mh), (rate), (channels), (encoding))
#define mpg123_open(mh, path) IMpg123->mpg123_open((mh), (path))
#define mpg123_open_fd(mh, fd) IMpg123->mpg123_open_fd((mh), (fd))
#define mpg123_open_handle(mh, iohandle) IMpg123->mpg123_open_handle((mh), (iohandle))
#define mpg123_open_feed(mh) IMpg123->mpg123_open_feed((mh))
#define mpg123_close(mh) IMpg123->mpg123_close((mh))
#define mpg123_read(mh, outmemory, outmemsize, done) IMpg123->mpg123_read((mh), (outmemory), (outmemsize), (done))
#define mpg123_feed(mh, in, size) IMpg123->mpg123_feed((mh), (in), (size))
#define mpg123_decode(mh, inmemory, inmemsize, outmemory, outmemsize, done) IMpg123->mpg123_decode((mh), (inmemory), (inmemsize), (outmemory), (outmemsize), (done))
#define mpg123_decode_frame(mh, num, audio, bytes) IMpg123->mpg123_decode_frame((mh), (num), (audio), (bytes))
#define mpg123_framebyframe_decode(mh, num, audio, bytes) IMpg123->mpg123_framebyframe_decode((mh), (num), (audio), (bytes))
#define mpg123_framebyframe_next(mh) IMpg123->mpg123_framebyframe_next((mh))
#define mpg123_tell(mh) IMpg123->mpg123_tell((mh))
#define mpg123_tellframe(mh) IMpg123->mpg123_tellframe((mh))
#define mpg123_tell_stream(mh) IMpg123->mpg123_tell_stream((mh))
#define mpg123_seek(mh, sampleoff, whence) IMpg123->mpg123_seek((mh), (sampleoff), (whence))
#define mpg123_feedseek(mh, sampleoff, whence, input_offset) IMpg123->mpg123_feedseek((mh), (sampleoff), (whence), (input_offset))
#define mpg123_seek_frame(mh, frameoff, whence) IMpg123->mpg123_seek_frame((mh), (frameoff), (whence))
#define mpg123_timeframe(mh, sec) IMpg123->mpg123_timeframe((mh), (sec))
#define mpg123_index(mh, offsets, step, fill) IMpg123->mpg123_index((mh), (offsets), (step), (fill))
#define mpg123_set_index(mh, offsets, step, fill) IMpg123->mpg123_set_index((mh), (offsets), (step), (fill))
#define mpg123_eq(mh, channel, band, val) IMpg123->mpg123_eq((mh), (channel), (band), (val))
#define mpg123_geteq(mh, channel, band) IMpg123->mpg123_geteq((mh), (channel), (band))
#define mpg123_reset_eq(mh) IMpg123->mpg123_reset_eq((mh))
#define mpg123_volume(mh, vol) IMpg123->mpg123_volume((mh), (vol))
#define mpg123_volume_change(mh, change) IMpg123->mpg123_volume_change((mh), (change))
#define mpg123_getvolume(mh, base, really, rva_db) IMpg123->mpg123_getvolume((mh), (base), (really), (rva_db))
#define mpg123_info(mh, mi) IMpg123->mpg123_info((mh), (mi))
#define mpg123_safe_buffer() IMpg123->mpg123_safe_buffer()
#define mpg123_scan(mh) IMpg123->mpg123_scan((mh))
#define mpg123_length(mh) IMpg123->mpg123_length((mh))
#define mpg123_set_filesize(mh, size) IMpg123->mpg123_set_filesize((mh), (size))
#define mpg123_tpf(mh) IMpg123->mpg123_tpf((mh))
#define mpg123_clip(mh) IMpg123->mpg123_clip((mh))
#define mpg123_getstate(mh, key, val, fval) IMpg123->mpg123_getstate((mh), (key), (val), (fval))
#define mpg123_init_string(sb) IMpg123->mpg123_init_string((sb))
#define mpg123_free_string(sb) IMpg123->mpg123_free_string((sb))
#define mpg123_resize_string(sb, news) IMpg123->mpg123_resize_string((sb), (news))
#define mpg123_grow_string(sb, news) IMpg123->mpg123_grow_string((sb), (news))
#define mpg123_copy_string(sb, to) IMpg123->mpg123_copy_string((sb), (to))
#define mpg123_add_string(sb, stuff) IMpg123->mpg123_add_string((sb), (stuff))
#define mpg123_add_substring(sb, stuff, from, count) IMpg123->mpg123_add_substring((sb), (stuff), (from), (count))
#define mpg123_set_string(sb, stuff) IMpg123->mpg123_set_string((sb), (stuff))
#define mpg123_set_substring(sb, stuff, from, count) IMpg123->mpg123_set_substring((sb), (stuff), (from), (count))
#define mpg123_strlen(sb, utf8) IMpg123->mpg123_strlen((sb), (utf8))
#define mpg123_enc_from_id3(id3_enc_byte) IMpg123->mpg123_enc_from_id3((id3_enc_byte))
#define mpg123_store_utf8(sb, enc, source, source_size) IMpg123->mpg123_store_utf8((sb), (enc), (source), (source_size))
#define mpg123_meta_check(mh) IMpg123->mpg123_meta_check((mh))
#define mpg123_id3(mh, v1, v2) IMpg123->mpg123_id3((mh), (v1), (v2))
#define mpg123_icy(mh, icy_meta) IMpg123->mpg123_icy((mh), (icy_meta))
#define mpg123_icy2utf8(icy_text) IMpg123->mpg123_icy2utf8((icy_text))
#define mpg123_parnew(mp, decoder, error) IMpg123->mpg123_parnew((mp), (decoder), (error))
#define mpg123_new_pars(error) IMpg123->mpg123_new_pars((error))
#define mpg123_delete_pars(mp) IMpg123->mpg123_delete_pars((mp))
#define mpg123_fmt_none(mp) IMpg123->mpg123_fmt_none((mp))
#define mpg123_fmt_all(mp) IMpg123->mpg123_fmt_all((mp))
#define mpg123_fmt(mp, rate, channels, encodings) IMpg123->mpg123_fmt((mp), (rate), (channels), (encodings))
#define mpg123_fmt_support(mp, rate, encoding) IMpg123->mpg123_fmt_support((mp), (rate), (encoding))
#define mpg123_par(mp, type, value, fvalue) IMpg123->mpg123_par((mp), (type), (value), (fvalue))
#define mpg123_getpar(mp, type, val, fval) IMpg123->mpg123_getpar((mp), (type), (val), (fval))
#define mpg123_replace_buffer(mh, data, size) IMpg123->mpg123_replace_buffer((mh), (data), (size))
#define mpg123_outblock(mh) IMpg123->mpg123_outblock((mh))
#define mpg123_replace_reader(mh, r_read, r_lseek) IMpg123->mpg123_replace_reader((mh), (r_read), (r_lseek))
#define mpg123_replace_reader_handle(mh, r_read, r_lseek, cleanup) IMpg123->mpg123_replace_reader_handle((mh), (r_read), (r_lseek), (cleanup))

#endif /* INLINE4_MPG123_H */
